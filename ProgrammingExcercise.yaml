---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v1
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/products/{id}:
    get:
      tags:
      - product-controller
      summary: Get a product by ID
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
      - product-controller
      summary: Update an existing product
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags:
      - product-controller
      summary: Delete a product by ID
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/orders/{id}:
    get:
      tags:
      - order-controller
      summary: Get an order by ID
      operationId: getOrderById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
    put:
      tags:
      - order-controller
      summary: Update an existing order
      operationId: updateOrder
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
      - order-controller
      summary: Delete an order by ID
      operationId: deleteOrder
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/orderitems/{id}:
    get:
      tags:
      - order-item-controller
      summary: Get a orderItem by ID
      operationId: getOrderItemById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderItem'
    put:
      tags:
      - order-item-controller
      summary: Update an existing orderItem
      operationId: updateOrderItem
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderItem'
    delete:
      tags:
      - order-item-controller
      summary: Delete a orderItem by ID
      operationId: deleteOrderItem
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/products:
    get:
      tags:
      - product-controller
      summary: Get a list of all products
      operationId: getAllProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
      - product-controller
      summary: Create a new product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
  /api/orders:
    get:
      tags:
      - order-controller
      summary: 'Get a list of all orders '
      operationId: getAllOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
      - order-controller
      summary: Create a new order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /api/orderitems:
    get:
      tags:
      - order-item-controller
      summary: 'Get a list of all orderitems '
      operationId: getAllOrderItems
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
    post:
      tags:
      - order-item-controller
      summary: Create a new orderItem
      operationId: createOrderItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderItem'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
